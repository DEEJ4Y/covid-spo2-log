{"version":3,"sources":["components/Heading.jsx","components/Row.jsx","components/Table.jsx","components/Chart.jsx","components/Main.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Heading","id","className","href","Row","props","fullDate","date","time","oxygen","note","colourClass","record","Date","DateAndTime","toDateString","split","toLocaleTimeString","Table","records","setRecords","setLocalRecords","useRef","useEffect","current","localStorage","getItem","localRecords","JSON","parse","deleteRecord","width","map","onClick","Chart","data","toTimeString","style","height","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","Label","content","position","YAxis","domain","CartesianGrid","strokeDasharray","Tooltip","Area","type","stroke","fillOpacity","fill","Main","useState","setRecord","startDate","setStartDate","saveRecordsToLocalStorage","updateForm","event","target","name","value","prev","placeholder","onChange","selected","toSaveRecord","now","length","preventDefault","Footer","year","getFullYear","App","setItem","stringify","console","log","remainingRecords","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d42c3db6.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport React from \"react\";\r\n\r\nfunction Heading() {\r\n  return (\r\n    <div id=\"heading\">\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#heading\">\r\n            COVID SpO2 Log\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  const record = props.record;\r\n\r\n  let fullDate, date, time, oxygen, note, colourClass;\r\n\r\n  if (record) {\r\n    fullDate = new Date(record.DateAndTime);\r\n    // console.log(fullDate);\r\n    date =\r\n      fullDate.toDateString().split(\" \")[1] +\r\n      \" \" +\r\n      fullDate.toDateString().split(\" \")[2] +\r\n      \" \" +\r\n      fullDate.toDateString().split(\" \")[3];\r\n\r\n    time = fullDate.toLocaleTimeString(\"en-US\");\r\n\r\n    oxygen = record.oxygen;\r\n    note = record.note;\r\n\r\n    if (oxygen > 93) {\r\n      colourClass = \"table-success\";\r\n    } else if (oxygen >= 90) {\r\n      colourClass = \"table-warning\";\r\n    } else {\r\n      colourClass = \"table-danger\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{date}</td>\r\n      <td>{time}</td>\r\n      <td className={colourClass}>{record ? oxygen : \" \"}</td>\r\n      <td>{record ? note : \" \"} </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Row from \"./Row\";\r\n\r\nfunction Table(props) {\r\n  const records = props.records;\r\n  const setRecords = props.setRecords;\r\n\r\n  let setLocalRecords = useRef(() => {});\r\n\r\n  useEffect(() => {\r\n    setLocalRecords.current();\r\n  }, []);\r\n\r\n  setLocalRecords.current = () => {\r\n    if (localStorage.getItem(\"records\")) {\r\n      let localRecords = JSON.parse(localStorage.getItem(\"records\"));\r\n      setRecords([...localRecords]);\r\n    }\r\n  };\r\n\r\n  const deleteRecord = props.deleteRecord;\r\n\r\n  return (\r\n    <div>\r\n      <h3 id=\"my-records\">My Records</h3>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th width=\"25%\">Date</th>\r\n              <th width=\"25%\">Time</th>\r\n              <th width=\"25%\">Oxygen Saturation (SpO2)</th>\r\n              <th>Note</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map((record) => {\r\n              return (\r\n                <Row\r\n                  key={record.DateAndTime}\r\n                  record={record}\r\n                  onClick={deleteRecord}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  YAxis,\r\n  XAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from \"recharts\";\r\n\r\nfunction Chart(props) {\r\n  const records = props.records;\r\n\r\n  let data = [];\r\n  if (records) {\r\n    data = records.map((record) => {\r\n      let FullDate = new Date(record.DateAndTime);\r\n      const time = FullDate.toTimeString(\"en-us\").split(\" \")[0];\r\n      return { oxygen: record.oxygen, time: time };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: 300 }}>\r\n      <ResponsiveContainer>\r\n        <AreaChart\r\n          id=\"chart\"\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <XAxis dataKey=\"time\">\r\n            <Label content=\"Time\" offset={0} position=\"insideBottom\" />\r\n          </XAxis>\r\n          <YAxis domain={[80, 100]} />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"oxygen\"\r\n            stroke=\"#8884d8\"\r\n            fillOpacity={1}\r\n            fill=\"url(#colorUv)\"\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport Chart from \"./Chart\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Main(props) {\r\n  const [record, setRecord] = useState({ oxygen: \"\", note: \"\" });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const records = props.records;\r\n  const setRecords = props.setRecords;\r\n  const saveRecordsToLocalStorage = props.saveRecordsToLocalStorage;\r\n  const deleteRecord = props.deleteRecord;\r\n\r\n  const updateForm = (event) => {\r\n    const { name, value } = event.target;\r\n    if ((name === \"oxygen\" && value <= 100 && value >= 0) || name === \"note\") {\r\n      setRecord((prev) => {\r\n        return { ...prev, [name]: value };\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveRecord = (event) => {\r\n    if (record.oxygen !== \"\") {\r\n      const toSaveRecord = { ...record, DateAndTime: Date.now() };\r\n\r\n      setRecords((prev) => {\r\n        if (prev.length === 0) {\r\n          return [{ ...toSaveRecord }];\r\n        } else {\r\n          return [...prev, { ...toSaveRecord }];\r\n        }\r\n      });\r\n\r\n      saveRecordsToLocalStorage();\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <main className=\"bg-light\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 col-md-6 col-sm-12\">\r\n          <h3>My Chart</h3>\r\n          <Chart records={records} />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-12\">\r\n          <h3>Add a record</h3>\r\n          <form>\r\n            <label>Oxygen Saturation (SpO2)</label>\r\n            <input\r\n              name=\"oxygen\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter your oxygen level\"\r\n              value={record.oxygen}\r\n              onChange={updateForm}\r\n            />\r\n            <label>Note</label>\r\n            <input\r\n              name=\"note\"\r\n              className=\"form-control\"\r\n              placeholder=\"Add a note...\"\r\n              value={record.note}\r\n              onChange={updateForm}\r\n            />\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n            />\r\n            <button className=\"btn btn-primary\" onClick={saveRecord}>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n      <Table\r\n        records={records}\r\n        setRecords={setRecords}\r\n        saveRecordsToLocalStorage={saveRecordsToLocalStorage}\r\n        deleteRecord={deleteRecord}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n\r\n  return (\r\n    <footer>\r\n      <p>© Copyright {year} David Joseph</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport Heading from \"./Heading.jsx\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const saveRecordsToLocalStorage = () => {\r\n    localStorage.setItem(\"records\", JSON.stringify(records));\r\n  };\r\n\r\n  const deleteRecord = (event) => {\r\n    const id = event.target.id;\r\n    console.log(id);\r\n\r\n    const remainingRecords = records.filter((record) => {\r\n      return record.DateAndTime !== id;\r\n    });\r\n\r\n    setRecords((prev) => [...remainingRecords]);\r\n    saveRecordsToLocalStorage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-light\" height=\"100vh\">\r\n      <Heading />\r\n      <Main\r\n        records={records}\r\n        setRecords={setRecords}\r\n        saveRecordsToLocalStorage={saveRecordsToLocalStorage}\r\n        deleteRecord={deleteRecord}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.jsx\";\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App />\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}